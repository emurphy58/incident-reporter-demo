{"version":3,"sources":["../../src/services/environment.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/pages/existing-claims/existing-claims.component.ts","../../src/pages/new-claim/new-claim.component.ts","../../src/pages/claim-details/claim-details.component.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/existing-claims/orderBy.pipe.ts","../../src/services/claims.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*\n    This file stores the external URLs for the UI\n*/\n\nexport const environment = {\n\n    mobileBackendUrl: 'http://mobile-backend-incident-demo.192.168.99.100.nip.io'\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/environment.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 109;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 109\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 152;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 0","/*\n  This component controls the home page\n*/\n\n//Angular Imports\nimport { Component } from '@angular/core';\n\n//Ionic Imports\nimport { NavController } from 'ionic-angular';\n\n//Local Imports\nimport { ExistingClaimsComponent } from '../existing-claims/existing-claims.component'\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n  //This method controls what the \"Get Started\" button does\n  onGetStarted(): void {\n\n    //Navigate to the existing claims page\n    this.navCtrl.push(ExistingClaimsComponent)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","/*\n  This component controls the existing claims page\n*/\n\n//Angular Imports\nimport { Component, OnInit } from '@angular/core';\n\n//Ionic Imports\nimport { NavController } from 'ionic-angular';\n\n//Local Imports\nimport { NewClaimComponent } from '../new-claim/new-claim.component'\nimport { ClaimDetailsComponent } from '../claim-details/claim-details.component'\nimport { ClaimService } from '../../services/claims.service'\nimport { Claim } from '../../objects/Claim'\nimport { environment } from '../../services/environment'\n\n@Component({\n\n  selector: 'existing-claims',\n  templateUrl: 'existing-claims.component.html',\n})\nexport class ExistingClaimsComponent implements OnInit {\n\n  //Objects\n  claims: [Claim]  //An array of claims\n  claim: Claim    //A single claim\n\n  //Checks\n  gotData: boolean = false\n\n  constructor(public navCtrl: NavController, public claimService: ClaimService) {\n\n  }\n\n  //This method runs while the page is loading\n  ngOnInit(): void {\n\n    //Get all the available claims\n    //this.claimService.getClaims('./json/claims.json').subscribe((res) => {\n    this.claimService.GET(environment.mobileBackendUrl + '/v1/api/claims').subscribe((res) => {\n\n      //Store the claims in an array of claims\n      this.claims = res;\n\n      //HTML is free to load claims data now\n      this.gotData = true;\n\n    })\n  }\n\n  //This method controls what the \"?\" button does\n  onHelp(): void {\n\n    //Go back\n    this.navCtrl.pop()\n\n  }\n\n  //This method controls what the \"New\" button does\n  onNew(): void {\n\n    //Go to the new claim page\n    this.navCtrl.push(NewClaimComponent)\n\n  }\n\n  //This method controls what the claim details arrow does\n  onLoadClaimDetails(claim: Claim): void {\n\n    //Go to the claim detail page and pass in the claim that was selected\n    this.navCtrl.push(ClaimDetailsComponent, claim)\n\n  }\n\n  doRefresh(refresher) {\n\n    //Get all the available claims\n    //this.claimService.getClaims('./json/claims.json').subscribe((res) => {\n    this.claimService.GET(environment.mobileBackendUrl + '/v1/api/claims').subscribe((res) => {\n\n      //Store the claims in an array of claims\n      this.claims = res;\n\n      refresher.complete();\n\n    })\n\n    setTimeout(() => {\n\n      refresher.complete()\n\n    }, 5000)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/existing-claims/existing-claims.component.ts","/*\n  This component controls the new claim page\n*/\n\n//Angular Imports\nimport { Component, OnInit } from '@angular/core';\n\n//Ionic Imports\nimport { NavController } from 'ionic-angular';\n\n//Local Imports\nimport { Incident } from '../../objects/Incident'\nimport { Claim } from '../../objects/Claim'\nimport { Questionnaire } from '../../objects/Questionnaire'\nimport { Answer } from '../../objects/Answer'\nimport { Comment } from '../../objects/Comment'\nimport { environment } from '../../services/environment'\nimport { ClaimService } from '../../services/claims.service'\n\n@Component({\n  selector: 'existing-claims',\n  templateUrl: 'new-claim.component.html'\n})\nexport class NewClaimComponent implements OnInit {\n\n  //Objects\n  incident: Incident;\n  claim: Claim;\n  questionnaire: Questionnaire\n  answer: Answer\n  comment: Comment\n\n  //Test Data\n  incidentTypes: string[]\n  severities: string[]\n  states: string[]\n\n  //Checks\n  showIncident: boolean = true;\n  loadQuestions: boolean = false;\n\n  answers: any = []\n\n  constructor(public navCtrl: NavController, private claimService: ClaimService) {\n\n  }\n\n  //This method runs while the page is loading\n  ngOnInit(): void {\n\n    this.incident = {\n\n      id: 56,\n      reporterUserId: 99,\n      type: null,\n      description: null,\n      incidentDate: null,\n      buildingName: null,\n      stateCode: null,\n      zipCode: null,\n      severity: null,\n    }\n\n    this.severities = ['LOW', 'MEDIUM', 'HIGH']\n    this.incident.incidentDate = (Date.now(), 'yyyy-MM-dd')\n    this.incident.severity = 'LOW'\n\n    this.incidentTypes = [\"windshield\", \"collision\", \"hail\"]\n    this.states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\",\n      \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachussetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\",\n      \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\",\n      \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\n\n    this.claim = {\n\n      id: 0,\n      processId: 0,\n      incident: this.incident,\n      customer: null,\n      questionnaire: null,\n      photos: null,\n      approved: null,\n      statedValue: null,\n      comments: [],\n      answers: [{ strValue: '' }]\n    }\n  }\n\n  //This method controls what the \"Submit\" button does\n  onSubmit(): void {\n\n    //Add the new claim\n    this.claimService.POST(environment.mobileBackendUrl + '/api/v1/bpms/customer-incident', JSON.stringify(this.incident)).subscribe((res) => {\n\n      this.claim.questionnaire = res;\n      this.answers = []\n      this.showIncident = false\n      this.loadQuestions = true;\n\n    })\n  }\n\n  updateAnswers(): void {\n\n    var answers = [];\n\n    for(var i = 0; i < this.claim.questionnaire.questions.length; i++) {\n\n      if (!this.answers[i]) {\n\n        if (this.claim.questionnaire.questions[i].answerType === 'YES_NO') {\n\n          this.answers[i] = false;\n\n        } else {\n\n          this.answers[i] = '';\n        }\n      }\n    }\n\n    for(var i = 0; i < this.answers.length; i++) {\n\n      let answer: any = {};\n\n      answer.questionId = this.claim.questionnaire.questions[i].questionId;\n\n      if (this.answers[i] === true) {\n\n        answer.strValue = 'Yes';\n\n      } else if (this.answers[i] === false) {\n\n        answer.strValue = 'No';\n\n      } else {\n\n        answer.strValue = this.answers[i];\n      }\n\n      answers.push(answer);\n    }\n\n    this.claim.questionnaire.answers = answers;\n\n    if (this.claim.questionnaire.answers.length > 0) {\n\n      this.claimService.POST(environment.mobileBackendUrl + '/api/v1/bpms/update-questions', JSON.stringify(this.claim.questionnaire)).subscribe((res) => {\n\n        this.claim.questionnaire = res\n      })\n    }\n  }\n\n  //This method controls what the close button does\n  onClose(): void {\n\n    this.navCtrl.pop()\n  }\n\n  //This method controls what the \"Finish\" button does\n  onFinish(): void {\n\n    //Finish Claim\n    this.claimService.POST(environment.mobileBackendUrl + '/api/v1/bpms/startprocess', JSON.stringify(this.claim)).subscribe((res) => {\n\n      this.claim.processId = res;\n\n      this.navCtrl.pop()\n\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/new-claim/new-claim.component.ts","/*\n  This component controls the claim details page\n*/\n\n//Angular Imports\nimport { Component, OnInit } from '@angular/core';\n\n//Ionic Imports\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\n\n//Local Imports\nimport { Claim } from '../../objects/Claim'\nimport { environment } from '../../services/environment'\nimport { ClaimService } from '../../services/claims.service'\n\n@Component({\n  selector: 'existing-claims',\n  templateUrl: 'claim-details.component.html'\n})\nexport class ClaimDetailsComponent implements OnInit {\n\n  claim: Claim\n  comment: any\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private camera: Camera, private claimService: ClaimService, private transfer: FileTransfer) {\n\n  }\n\n  fileTransfer: FileTransferObject = this.transfer.create();\n\n  //This method runs while the page is loading\n  ngOnInit(): void {\n\n    //Get the claim that was passed in from the existing claims page\n    this.claim = this.navParams.data\n\n  }\n\n  //This method controls what the back button does\n  onBack(): void {\n\n    this.navCtrl.pop()\n  }\n\n  //This method saves a new comment to the claim\n  saveComment(): void {\n\n    if (this.comment) {\n\n      this.claimService.POST(environment.mobileBackendUrl + '/api/v1/bpms/add-comments/' + this.claim.processId, JSON.stringify({ claimComments: this.comment, messageSource: 'reporter' })).subscribe((res) => {\n\n        if (!this.claim.comments) {\n\n          this.claim.comments = [];\n        }\n\n        this.claim.comments.push({\n\n          message: this.comment,\n          title: '',\n          commenterName: '',\n          commentDate: new Date()\n        });\n\n        this.comment = '';\n      })\n    }\n  }\n\n  //This method takes a picture\n  takePhoto(pictureSourceId: number): void {\n\n    let options: CameraOptions = {\n\n      quality: 100,\n      destinationType: this.camera.DestinationType.FILE_URI,\n      sourceType: pictureSourceId,\n      correctOrientation: true,\n      encodingType: 0\n    };\n\n    this.camera.getPicture(options).then((imageData) => {\n\n      var imageUri = imageData;\n\n      if (imageUri) {\n\n        this.sendPhoto(imageUri);\n\n        this.camera.cleanup();\n      }\n    })\n  }\n\n  sendPhoto(imageUri) {\n\n    let options: FileUploadOptions = {\n\n      fileKey: 'file',\n      fileName: imageUri.substr(imageUri.lastIndexOf('/') + 1),\n      mimeType: 'image/jpeg'\n    }\n\n    var ft: FileTransferObject;\n    ft.upload(imageUri, encodeURI(environment.mobileBackendUrl + '/api/v1/bpms/upload-photo/' + this.claim.processId + '/' + options.fileName + '/responder'), options).then((success) => {\n\n      var responseData = JSON.parse(success.response);\n      var link = responseData.link;\n\n      if (!this.claim.photos) {\n\n        this.claim.photos = [];\n      }\n\n      this.claim.photos.push(link);\n\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/claim-details/claim-details.component.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Camera } from '@ionic-native/camera';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ExistingClaimsComponent } from '../pages/existing-claims/existing-claims.component'\nimport { OrderByPipe } from '../pages/existing-claims/orderBy.pipe'\nimport { NewClaimComponent } from '../pages/new-claim/new-claim.component'\nimport { ClaimDetailsComponent } from '../pages/claim-details/claim-details.component'\nimport { ClaimService } from '../services/claims.service'\nimport { FileTransfer } from '@ionic-native/file-transfer';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ExistingClaimsComponent,\n    NewClaimComponent,\n    ClaimDetailsComponent,\n    OrderByPipe\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ExistingClaimsComponent,\n    NewClaimComponent,\n    ClaimDetailsComponent\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ClaimService,\n    Camera,\n    FileTransfer\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/*\n    This pipe orders the claims by a specific parameter\n*/\n\nimport { Pipe } from '@angular/core';\n\n@Pipe({\n    name: \"orderBy\"\n})\nexport class OrderByPipe {\n\n    transform(array: Array<string>, args: string): Array<string> {\n\n        array.sort((a: any, b: any) => {\n\n            if (a < b) {\n\n                return -1;\n\n            } else if (a > b) {\n\n                return 1;\n\n            } else {\n\n                return 0;\n            }\n        });\n\n        return array;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/existing-claims/orderBy.pipe.ts","/*\n    This service is the \"CRUD class\" for claims\n*/\n\n//Angular Imports\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\n\n//JavaScript Imports\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ClaimService {\n\n    constructor(private http: Http) { }\n\n    //Get Claims\n    GET(url: string): Observable<any> {\n\n        return this.http.get(url)\n            .map((response: Response) => <any>response.json())\n            .catch(this.handleError);\n    }\n\n    //Add Claim\n    POST(url: string, jsonData: string): Observable<any> {\n\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n\n        return this.http.post(url, jsonData, { headers: headers })\n            .map((response: Response) => <any>response.json())\n            .catch(this.handleError);\n    }\n\n    //Update Claim\n    PUT(url: string, jsonData: string): Observable<any> {\n\n        return this.http.put(url, jsonData)\n            .map((response: Response) => <any>response.json())\n            .catch(this.handleError);\n    }\n\n    //Delete Claim\n    DELETE(url: string): Observable<any> {\n\n        return this.http.delete(url)\n            .map((response: Response) => <any>response.json())\n            .catch(this.handleError);\n    }\n\n    //Error Handler\n    private handleError(error: Response) {\n\n        console.error(error);\n\n        return Observable.throw(error.json().error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/claims.service.ts"],"sourceRoot":""}